{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Prem%20Pandey/Desktop/quiz-app/src/firebase.js"],"sourcesContent":["\r\n\r\nimport { initializeApp, getApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBw8R0I1JS-aiKFkXJ41_x7M367Cct1Tf8\",\r\n  authDomain: \"herosteels-quiz.firebaseapp.com\",\r\n  projectId: \"herosteels-quiz\",\r\n  storageBucket: \"herosteels-quiz.firebasestorage.app\",\r\n  messagingSenderId: \"787656898836\",\r\n  appId: \"1:787656898836:web:ea9846107a045a02122a01\",\r\n  measurementId: \"G-N182PJLLDZ\"\r\n};\r\n\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { app, auth, db };"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,4KAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,4KAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,4KAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,kMAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Prem%20Pandey/Desktop/quiz-app/src/components/QuizPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\r\n\r\nexport default function QuizPage() {\r\n  const [userData, setUserData] = useState({ name: \"\", empId: \"\", department: \"\" });\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(1800); // 30 min timer\r\n\r\n  // Quiz live time range (11:00 AM - 11:30 AM on 15 Aug 2025)\r\n  const quizStartTime = new Date(\"2025-08-14T11:00:00\");\r\n  const quizEndTime = new Date(\"2025-08-15T18:30:00\");\r\n\r\n    const questions = [\r\n  { id: 1, q: \"Krishna Janmashtami kis devta ke janm din ke roop me manai jati hai?\", options: [\"Shiva\", \"Vishnu ke avatar Krishna\", \"Brahma\", \"Indra\"] },\r\n  { id: 2, q: \"Krishna ka janm kis nagar me hua tha?\", options: [\"Mathura\", \"Dwarka\", \"Vrindavan\", \"Gokul\"] },\r\n  { id: 3, q: \"Krishna ke pita kaun the?\", options: [\"Vasudeva\", \"Nanda\", \"Dasharatha\", \"Parikshit\"] },\r\n  { id: 4, q: \"Krishna ki maa kaun thi?\", options: [\"Devaki\", \"Yashoda\", \"Kaikeyi\", \"Kunti\"] },\r\n  { id: 5, q: \"Krishna ko kis raja ne kaid me rakha tha?\", options: [\"Kansa\", \"Ravana\", \"Hiranyakashipu\", \"Duryodhana\"] },\r\n  { id: 6, q: \"Krishna ka rang kaunsa tha?\", options: [\"Shyam (dark blue)\", \"Gora\", \"Peela\", \"Sawla\"] },\r\n  { id: 7, q: \"Krishna ka vishesh vadya kaunsa tha?\", options: [\"Bansuri\", \"Veena\", \"Sitar\", \"Mridang\"] },\r\n  { id: 8, q: \"Krishna ka priy bhojan kya tha?\", options: [\"Makhan\", \"Kheer\", \"Puri\", \"Laddu\"] },\r\n  { id: 9, q: \"Krishna ke bade bhai kaun the?\", options: [\"Balarama\", \"Shatrughna\", \"Lakshmana\", \"Bharata\"] },\r\n  { id: 10, q: \"Krishna ne kis nag ko daman kiya tha?\", options: [\"Kaliya Naag\", \"Vasuki\", \"Takshaka\", \"Sheshnaag\"] },\r\n  { id: 11, q: \"Janmashtami kis tithi ko manai jati hai?\", options: [\"Ashtami\", \"Purnima\", \"Chaturthi\", \"Amavasya\"] },\r\n  { id: 12, q: \"Krishna ka bachpan kis gaon me bita?\", options: [\"Vrindavan\", \"Ayodhya\", \"Hastinapur\", \"Mathura\"] },\r\n  { id: 13, q: \"Krishna ke pradhan mitra kaun the?\", options: [\"Sudama\", \"Karna\", \"Arjun\", \"Uddhav\"] },\r\n  { id: 14, q: \"Krishna kis yudh me saarathi bane?\", options: [\"Mahabharat\", \"Ram-Ravan Yudh\", \"Kurukshetra ke bahar\", \"Dasharatha ka Yudh\"] },\r\n  { id: 15, q: \"Krishna ka priy geet kaunsa tha?\", options: [\"Bhagavad Gita\", \"Rigveda\", \"Samveda\", \"Atharvaveda\"] },\r\n  { id: 16, q: \"Krishna ne kis rani se vivah kiya?\", options: [\"Rukmini\", \"Sita\", \"Draupadi\", \"Jambavati\"] },\r\n  { id: 17, q: \"Krishna ke kitne pramukh patra the Mahabharat me?\", options: [\"Bahut\", \"Ek\", \"Teen\", \"Paanch\"] },\r\n  { id: 18, q: \"Krishna ka janm raat ko hua tha ya din me?\", options: [\"Raat\", \"Din\", \"Subah\", \"Shaam\"] },\r\n  { id: 19, q: \"Krishna ko kis naam se bhi jana jata hai?\", options: [\"Govind\", \"Vishnu\", \"Indra\", \"Murlidhar\"] },\r\n  { id: 20, q: \"Janmashtami ke din log kya karte hain?\", options: [\"Upvaas\", \"Yudh\", \"Shikar\", \"Dahi Handi\"] },\r\n];\r\n\r\n\r\n  // Timer\r\n  useEffect(() => {\r\n    if (quizStarted && timeLeft > 0 && !submitted) {\r\n      const timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n    if (timeLeft === 0 && !submitted) handleSubmit();\r\n  }, [quizStarted, timeLeft, submitted]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const m = Math.floor(seconds / 60);\r\n    const s = seconds % 60;\r\n    return `${m.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const handleChange = (id, option) => {\r\n    setAnswers({ ...answers, [id]: option });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    await addDoc(collection(db, \"quizResults\"), {\r\n      name: userData.name,\r\n      department: userData.department,\r\n      employeeId: userData.empId,\r\n      answers,\r\n      submittedAt: serverTimestamp(),\r\n    });\r\n    setSubmitted(true);\r\n    setQuizStarted(false);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    const now = new Date();\r\n    if (!userData.name || !userData.empId || !userData.department) {\r\n      alert(\"Please fill all details before starting!\");\r\n      return;\r\n    }\r\n    if (now < quizStartTime || now > quizEndTime) {\r\n      alert(\"Quiz is not live right now!\");\r\n      return;\r\n    }\r\n    setQuizStarted(true);\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      maxWidth: \"700px\",\r\n      margin: \"auto\",\r\n      padding: \"20px\",\r\n      fontFamily: \"'Segoe UI', sans-serif\",\r\n    },\r\n    header: {\r\n      textAlign: \"center\",\r\n      color: \"#2c3e50\",\r\n    },\r\n    info: {\r\n      textAlign: \"center\",\r\n      color: \"#8e44ad\",\r\n      fontSize: \"18px\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    card: {\r\n      background: \"#ffffff\",\r\n      padding: \"20px\",\r\n      borderRadius: \"12px\",\r\n      boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n    },\r\n    input: {\r\n      padding: \"12px\",\r\n      fontSize: \"16px\",\r\n      borderRadius: \"8px\",\r\n      border: \"1px solid #ccc\",\r\n      outline: \"none\",\r\n      transition: \"0.3s\",\r\n    },\r\n    button: {\r\n      padding: \"12px\",\r\n      fontSize: \"16px\",\r\n      border: \"none\",\r\n      borderRadius: \"8px\",\r\n      background: \"#3498db\",\r\n      color: \"#fff\",\r\n      cursor: \"pointer\",\r\n      fontWeight: \"bold\",\r\n      transition: \"0.3s\",\r\n    },\r\n    buttonHover: {\r\n      background: \"#2980b9\",\r\n    },\r\n    question: {\r\n      background: \"#f7f9fc\",\r\n      padding: \"15px\",\r\n      borderRadius: \"8px\",\r\n      marginBottom: \"12px\",\r\n      border: \"1px solid #ddd\",\r\n    },\r\n    option: {\r\n      display: \"block\",\r\n      marginTop: \"6px\",\r\n      cursor: \"pointer\",\r\n    },\r\n    timer: {\r\n      position: \"fixed\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      width: \"100%\",\r\n      background: \"#ffcccc\",\r\n      color: \"#e74c3c\",\r\n      padding: \"10px\",\r\n      fontSize: \"18px\",\r\n      textAlign: \"center\",\r\n      zIndex: 1000,\r\n      borderBottom: \"2px solid #ccc\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  };\r\n\r\n  const now = new Date();\r\n\r\n  if (!quizStarted) {\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.header}>📚 Quiz Time</h1>\r\n      <h3 style={styles.info}>\r\n        📢 Quiz will be live between 11:00 AM to 11:30 AM on 15 Aug 2025\r\n      </h3>\r\n      {now < quizStartTime || now > quizEndTime ? (\r\n        <p style={{ color: \"red\", textAlign: \"center\" }}>\r\n          ⛔ Quiz is not live right now!\r\n        </p>\r\n      ) : null}\r\n      <div style={styles.card}>\r\n        <input\r\n          style={styles.input}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={userData.name}\r\n          onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n        />\r\n        <input\r\n          style={styles.input}\r\n          type=\"text\"\r\n          placeholder=\"Department\"\r\n          value={userData.department}\r\n          onChange={(e) => setUserData({ ...userData, department: e.target.value })}\r\n        />\r\n        <input\r\n          style={styles.input}\r\n          type=\"text\"\r\n          placeholder=\"Employee ID\"\r\n          value={userData.empId}\r\n          onChange={(e) => setUserData({ ...userData, empId: e.target.value })}\r\n        />\r\n        <button\r\n          style={styles.button}\r\n          onMouseOver={(e) =>\r\n            (e.target.style.background = styles.buttonHover.background)\r\n          }\r\n          onMouseOut={(e) =>\r\n            (e.target.style.background = styles.button.background)\r\n          }\r\n          onClick={handleStart}\r\n        >\r\n          🚀 Start Quiz\r\n        </button>\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <footer\r\n        style={{\r\n          marginTop: \"30px\",\r\n          padding: \"10px\",\r\n          textAlign: \"center\",\r\n          fontSize: \"14px\",\r\n          color: \"#7f8c8d\",\r\n          borderTop: \"1px solid #ddd\",\r\n        }}\r\n      >\r\n        © {new Date().getFullYear()} Hero Steels Limited, IT Department — All Rights Reserved\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div style={styles.container}>\r\n        <h2 style={{ color: \"#27ae60\", textAlign: \"center\" }}>🎉 Dhanyavaad! Aapka quiz submit ho gaya!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.timer}>\r\n        ⏳ Time Left: {formatTime(timeLeft)}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"60px\" }}>\r\n        {questions.map((q) => (\r\n          <div key={q.id} style={styles.question}>\r\n            <p><b>{q.id}. {q.q}</b></p>\r\n            {q.options.map((opt) => (\r\n              <label key={opt} style={styles.option}>\r\n                <input type=\"radio\" name={q.id} value={opt} onChange={() => handleChange(q.id, opt)} checked={answers[q.id] === opt} /> {opt}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        style={styles.button}\r\n        onMouseOver={(e) => (e.target.style.background = styles.buttonHover.background)}\r\n        onMouseOut={(e) => (e.target.style.background = styles.button.background)}\r\n        onClick={handleSubmit}\r\n      >\r\n        ✅ Submit\r\n      </button>\r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Prem%20Pandey/Desktop/quiz-app/src/pages/index.js"],"sourcesContent":["import QuizPage from \"../components/QuizPage\";\r\n\r\nexport default function Home() {\r\n  return <QuizPage />;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,0JAAC,yHAAA,CAAA,UAAQ;;;;;AAClB;KAFwB","debugId":null}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}